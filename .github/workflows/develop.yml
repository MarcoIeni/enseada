name: Develop

on:
  push:
    branches:
      - develop

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    container:
      image: rust:1-buster
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: target/debug
          key: ${{ runner.os }}-cargo-${{ hashFiles(format('{0}{1}', github.workspace, '/Cargo.lock')) }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npm install -g yarn
      - name: Install Dependencies
        run: |
          apt-get update -y
          apt-get install build-essential libssl-dev llvm-dev libclang-dev -y
          rustup update
          rustup component add clippy
          yarn --frozen-lockfile --cwd server install
          yarn --frozen-lockfile --cwd dashboard install
          yarn --frozen-lockfile --cwd api install
      - name: Build dashboard
        run: yarn --frozen-lockfile --cwd dashboard build
      - name: Lint code
        run: |
        # Reenable when issues are fixed
        # cargo clippy --all-targets --all-features -- -D warnings
      - name: Run tests
        run: |
          cargo test
  build:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
      - uses: actions/checkout@v1
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Build the Docker image
        run: |
          docker pull enseada/enseada:edge || true
          docker build --file Dockerfile --tag enseada/enseada:edge --cache-from enseada/enseada:edge .
          docker push enseada/enseada:edge
